from typing import Optional
import os

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, –¥–æ—Å—Ç—É–ø–µ–Ω –ª–∏ LlamaIndex –∫–ª–∏–µ–Ω—Ç
try:
    from utils.llama_client import LlamaIndexClient
    LLAMA_AVAILABLE = True
except ImportError:
    LLAMA_AVAILABLE = False

class ResearchTools:
    """–ü—Ä–æ—Å—Ç—ã–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ–∏—Å–∫–∞ –Ω–∞—É—á–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π"""
    
    def __init__(self):
        if LLAMA_AVAILABLE and os.getenv("LLAMA_INDEX_URL"):
            try:
                self.llama_client = LlamaIndexClient()
                self.use_llamaindex = True
                print("‚úÖ LlamaIndex –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ")
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ LlamaIndex: {e}")
                self.use_llamaindex = False
        else:
            print("‚ùå LlamaIndex –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω")
            self.use_llamaindex = False
    
    def search_research(self, topic: str, detail_level: str = "detailed") -> str:
    """
    –ü–æ–∏—Å–∫ –Ω–∞—É—á–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –ø–æ –ª—é–±–æ–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ç–µ–º–µ.
    """
    
    if not self.use_llamaindex:
        return f"""
üîç **–ü–æ–∏—Å–∫ –ø–æ —Ç–µ–º–µ: {topic}** (–¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º)

‚ö†Ô∏è **–ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞**
–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –∏–∑ ArXiv —Å—Ç–∞—Ç–µ–π –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è.
"""
    
    try:
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤
        top_k_map = {
            "basic": 10,
            "detailed": 20, 
            "comprehensive": 30
        }
        top_k = top_k_map.get(detail_level, 20)
        
        # –ú–Ω–æ–≥–æ—ç—Ç–∞–ø–Ω—ã–π –ø–æ–∏—Å–∫
        queries = [
            f"{topic} –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –∞–Ω–∞–ª–∏–∑",
            f"{topic} –º–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è –ø–æ–¥—Ö–æ–¥",
            f"{topic} —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã–≤–æ–¥—ã –ø—Ä–∞–∫—Ç–∏–∫–∞",
            f"{topic} –º–æ–¥–µ–ª—å —Ñ–æ—Ä–º—É–ª–∞ –∞–ª–≥–æ—Ä–∏—Ç–º",
            f"{topic} –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è"
        ]
        
        all_results = []
        all_sources = []
        
        for query in queries:
            result = self.llama_client.query(query, top_k=top_k//len(queries) + 5)
            
            if result.get("response") and not result.get("error"):
                all_results.append(result["response"])
                all_sources.extend(result.get("source_nodes", []))
        
        if not all_results:
            return f"‚ùå –ü–æ —Ç–µ–º–µ '{topic}' –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–∏–µ –∫–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞."
        
        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ —Å external_file_id
        unique_sources = []
        seen_files = set()
        
        for source in all_sources:
            if hasattr(source, 'metadata'):
                # –ü–æ–ª—É—á–∞–µ–º external_file_id
                file_id = source.metadata.get('external_file_id', 
                         source.metadata.get('file_id', 
                         source.metadata.get('document_id', 'unknown')))
                
                title = source.metadata.get('title', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è —Å—Ç–∞—Ç—å—è')
                
                # –£–±–∏—Ä–∞–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ file_id
                if file_id not in seen_files and len(title) > 10:
                    unique_sources.append({
                        'title': title,
                        'authors': source.metadata.get('authors', ''),
                        'year': source.metadata.get('year', ''),
                        'file_id': file_id,
                        'metadata': source.metadata  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
                    })
                    seen_files.add(file_id)
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
        combined_info = "\n\n".join(all_results)
        
        response = f"""
üìö **–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏—è –ø–æ —Ç–µ–º–µ: {topic.title()}**

## üîç –ß—Ç–æ –≥–æ–≤–æ—Ä—è—Ç –Ω–∞—É—á–Ω—ã–µ —Å—Ç–∞—Ç—å–∏:

{combined_info}

## üìñ –ò—Å—Ç–æ—á–Ω–∏–∫–∏ –∏–∑ –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π ({len(unique_sources)} —Å—Ç–∞—Ç–µ–π):

"""
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏—Å—Ç–æ—á–Ω–∏–∫–∏ —Å external_file_id
        for i, source in enumerate(unique_sources[:15], 1):
            title = source['title']
            authors = source['authors']
            year = source['year']
            file_id = source['file_id']
            
            source_line = f"{i}. **{title}**"
            
            if authors:
                source_line += f"\n   üìù –ê–≤—Ç–æ—Ä—ã: {authors}"
            if year:
                source_line += f"\n   üìÖ –ì–æ–¥: {year}"
                
            source_line += f"\n   üÜî **File ID:** `{file_id}`"
            source_line += "\n"
            
            response += f"\n{source_line}"
        
        response += f"\n\nüí° **–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ {len(unique_sources)} —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–π –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π ArXiv**"
        response += f"\n\nüìã **–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å File ID:** –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —É–∫–∞–∑–∞–Ω–Ω—ã–µ File ID –¥–ª—è –ø—Ä—è–º–æ–≥–æ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–º —Å—Ç–∞—Ç—å—è–º –≤ –≤–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"
        
        return response
        
    except Exception as e:
        return f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π: {str(e)}"
